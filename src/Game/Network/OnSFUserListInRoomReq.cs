using Microsoft.VisualBasic;
using Shared.Network;
using Shared.Util.Log.Factories;
using System;
using System.Collections.Generic;
using System.Text;

namespace Game.Network
{
    internal class OnSFUserListInRoomReq : BaseNetwork
    {
        public int ProtocolId()
        {
            return 304;
        }

        public void Handle(Packet packet, Shared.Session.Session session)
        {

            // i think this is for indication of server/channel/room no. yeah correct
            //session.SendRaw(new byte[] { 0x03, 0x00, 0x00, 0x00, 0x2f, 0x01, 0x01, 0x7e, 0x00 });
           // session.SendRaw(new byte[] { 0x03, 0x00, 0x00, 0x00, 0x2f, 0x01, 0x02, 0x21, 0x00 }); // from sfrush // server indication


            Packet roomInfo = new Packet(new byte[] { 0x3d, 0x00, 0x00, 0x00, 0x31, 0x01, 0x01, 0x00,
0x93, 0x01, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x73,
0x4e, 0x67, 0x61, 0x00, 0x00, 0x00, 0x00, 0x4e,
0x00, 0x00, 0x01, 0x05, 0x04, 0x00, 0x00, 0x00,
0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x30, 0x00, 0x00, 0x1e, 0x00, 0x00,
0x01, 0x00, 0x00 });

            roomInfo.Dump();
            session.SendPacket(roomInfo);
            /*session.SendRaw(new byte[] { 0x41, 0x00, 0x00, 0x00, 0x31, 0x01, 0x01, 0x00,
  0x76, 0x07, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x73,
  0x4b, 0x75, 0x32, 0x32, 0x00, 0x00, 0x00, 0x00,
  0x4e, 0x00, 0x00, 0x01, 0xf8, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00});*/
            // data from rush

            /*session.SendRaw(new byte[] {0x3c, 0x00, 0x00, 0x00, 0x31, 0x01, 0x01, 0x00,
0x43, 0x07, 0x57, 0x61, 0x73, 0x73, 0x61, 0x62,
0x79, 0x79, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x00,
0x00, 0x01, 0x05, 0x04, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x01,
0x00, 0x00});*/

            /*Packet data = new Packet(305);
            data.WriteByte(0x01);

            data.WriteByte(0x01); 
            data.WriteByte(0x00);
            data.WriteByte(0x07); // map
            data.WriteInt(5);
            
            data.WriteString("Wassabyy");
            data.WriteByte(0x00);
            data.WriteByte(0x00);
            data.WriteByte(0x00);
            data.WriteByte(0x00);
            data.WriteString("N");
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(1);
            data.WriteInt(5);
            data.WriteInt(4);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(1);
            data.WriteInt(1);
            data.WriteInt(1);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteByte(0x30);
            data.WriteInt(0);
            data.WriteInt(07);
            data.WriteByte(0x00);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(1);
            data.WriteInt(1);
            data.WriteLength();
            data.Dump();
            session.SendPacket(data);*/

            /*Packet data = new Packet(305);
            data.WriteByte(1);

            data.WriteInt(1); // count player in room
            data.WriteInt(2); // position 
            data.WriteString("N");
            data.WriteInt(1); // team kills rate
            
            data.WriteString("hello");
            data.WriteInt(0); // rank?
            data.WriteInt(0); // rank?
            data.WriteInt(0); // rank?
            data.WriteInt(0);

            data.WriteInt(0); // team kill?
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(0);
            data.WriteInt(1);
            data.WriteInt(0);
            data.WriteInt(1);
            data.WriteLength();
            data.Dump();
            session.SendPacket(data);*/

            //session.SendRaw(new byte[] { 0x05, 0x00, 0x00, 0x00, 0x26, 0x02, 0x43, 0x07, 0x05, 0x04, 0x00 }); // from sfrush // idk msg?

            //session.SendRaw(new byte[] { 0x01, 0x00, 0x00, 0x00, 0x1f, 0x05, 0x1e }); // from sfrush // change the win


            // game start
            /*session.SendRaw(new byte[] { 0x20, 0x00, 0x00, 0x00, 0xfe, 0x01, 0xaf, 0x93,
0xcc, 0x4a, 0x59, 0x33, 0x3a, 0x7d, 0x07, 0x72,
0xc0, 0x80, 0xcb, 0x62, 0x0d, 0xce, 0x3c, 0x28,
0xa5, 0x23, 0xf6, 0xa1, 0xcc, 0x58, 0xef, 0x26,
0x76, 0xf6, 0xbb, 0x91, 0xf1, 0x41 });

            Packet packetgame = new Packet(new byte[]
            {
                0x04, 0x00, 0x00, 0x00, 0x04, 0x02, 0x01, 0x93,
0x01, 0x02, 0x18, 0x00, 0x00, 0x00, 0x6b, 0x02,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x06, 0x00, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00,
0xfc, 0x01, 0x01, 0x00, 0x00, 0x93, 0x01, 0x05,
0x04, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x72, 0x75,
0x6e, 0x6b, 0x73, 0x4e, 0x67, 0x61, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0x00, 0x00, 0x00, 0xbe, 0x02, 0x00,
0x08, 0x00, 0x00, 0x00, 0x5f, 0x02, 0x02, 0x01,
0x01, 0x00, 0x12, 0x48, 0x08, 0x00
            });
            packetgame.Dump();
            session.SendPacket(packetgame);*/

        }


    }
}
